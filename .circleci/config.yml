# SPDX-FileCopyrightText: 2020 Intel Corporation
#
# SPDX-License-Identifier: MIT

version: 2.1

orbs:
  win: circleci/windows@2.4.0

jobs:
  build_windows_cpp:
    executor:
      name: win/default
      shell: bash.exe
    steps:
      - checkout
      - run:
          name: install
          command: scripts/install_windows.bat https://registrationcenter-download.intel.com/akdlm/irc_nas/17163/w_HPCKit_b_2021.1.10.2266_offline.exe intel.oneapi.win.cpp-compiler
      - run:
          name: build
          command: scripts/build_windows.bat c++ 2017_build_tools

      # Delete the following if you don't want to save install logs
      - run:
          command: |
            mkdir InstallLogs
            cp extract* bootstrapper* installer* InstallLogs
          when: always
      - store_artifacts:
          path: InstallLogs

  build_windows_fortran:
    executor:
      name: win/default
      shell: bash.exe
    steps:
      - checkout
      - run:
          name: install
          command: scripts/install_windows.bat https://registrationcenter-download.intel.com/akdlm/irc_nas/17163/w_HPCKit_b_2021.1.10.2266_offline.exe intel.oneapi.win.ifort-compiler
      - run:
          name: build
          command: scripts/build_windows.bat fortran 2017_build_tools

      # Delete the following if you don't want to save install logs
      - run:
          command: |
            mkdir InstallLogs
            cp extract* bootstrapper* installer* InstallLogs
          when: always
      - store_artifacts:
          path: InstallLogs

  build_windows_dpcpp:
    executor:
      name: win/default
      shell: bash.exe
    steps:
      - checkout
      - run:
          name: install
          command: scripts/install_windows.bat https://registrationcenter-download.intel.com/akdlm/irc_nas/17191/w_BaseKit_b_2021.1.10.2260_offline.exe intel.oneapi.win.dpcpp-compiler
      - run:
          name: build
          command: scripts/build_windows.bat dpc++ 2017_build_tools

      # Delete the following if you don't want to save install logs
      - run:
          command: |
            mkdir InstallLogs
            cp extract* bootstrapper* installer* InstallLogs
          when: always
      - store_artifacts:
          path: InstallLogs

  build_linux_apt_cpp:
    docker:
      - image: ubuntu:latest
    steps:
      - checkout
      - run:
          name: install
          command: . scripts/install_linux_apt_no_sudo.sh intel-oneapi-dpcpp-cpp-compiler-pro
      - run:
          name: build
          command: scripts/build_linux.sh c++

  build_linux_apt_fortran:
    docker:
      - image: ubuntu:latest
    steps:
      - checkout
      - run:
          name: install
          command: . scripts/install_linux_apt_no_sudo.sh intel-oneapi-ifort
      - run:
          name: build
          command: scripts/build_linux.sh fortran

  build_linux_apt_dpcpp:
    docker:
      - image: ubuntu:latest
    steps:
      - checkout
      - run:
          name: install
          command: . scripts/install_linux_apt_no_sudo.sh intel-oneapi-dpcpp-cpp-compiler
      - run:
          name: build
          command: scripts/build_linux.sh dpc++

  build_linux_container_cpp:
    docker:
      - image: intel/oneapi-hpckit
    steps:
      - run:
          name: install_git
          command: apt update && apt install -y git
      - checkout
      - run:
          name: build
          command: scripts/build_linux.sh c++

  build_linux_container_fortran:
    docker:
      - image: intel/oneapi-hpckit
    steps:
      - run:
          name: install_git
          command: apt update && apt install -y git
      - checkout
      - run:
          name: build
          command: scripts/build_linux.sh fortran

  build_linux_container_dpcpp:
    docker:
      - image: intel/oneapi-basekit
    steps:
      - run:
          name: install_git
          command: apt update && apt install -y git
      - checkout
      - run:
          name: build
          command: scripts/build_linux.sh dpc++

workflows:
  build-all:
    jobs:
    - build_windows_cpp
    - build_windows_fortran
    - build_windows_dpcpp
    - build_linux_apt_cpp
    - build_linux_apt_fortran
    - build_linux_apt_dpcpp
    - build_linux_container_cpp
    - build_linux_container_fortran
    - build_linux_container_dpcpp
