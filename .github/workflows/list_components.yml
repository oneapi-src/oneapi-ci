# SPDX-FileCopyrightText: 2022 Intel Corporation
#
# SPDX-License-Identifier: MIT

name: list_components
permissions: read-all

on:
  push: {}
  workflow_dispatch: {}
  schedule:
    - cron: '0 0 * * *'

env:
  WINDOWS_BASEKIT_URL: https://registrationcenter-download.intel.com/akdlm/IRC_NAS/1f18901e-877d-469d-a41a-a10f11b39336/intel-oneapi-base-toolkit-2025.3.0.372.exe
  WINDOWS_HPCKIT_URL: https://registrationcenter-download.intel.com/akdlm/IRC_NAS/3a871580-f839-46ed-aeae-685084127279/intel-oneapi-hpc-toolkit-2025.3.0.378.exe
  LINUX_BASEKIT_URL: https://registrationcenter-download.intel.com/akdlm/IRC_NAS/d640da34-77cc-4ab2-8019-ac5592f4ec19/intel-oneapi-base-toolkit-2025.3.0.375.sh
  LINUX_HPCKIT_URL: https://registrationcenter-download.intel.com/akdlm/IRC_NAS/66021d90-934d-41f4-bedf-b8c00bbe98bc/intel-oneapi-hpc-toolkit-2025.3.0.381.sh
  LINUX_AIKIT_URL: https://registrationcenter-download.intel.com/akdlm/IRC_NAS/491d5c2a-67fe-48d0-884f-6aecd88f5d8a/ai-tools-2025.0.0.75_offline.sh

jobs:
  windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: Intel® oneAPI Base Toolkit
      run: scripts/list_components_windows.bat $WINDOWS_BASEKIT_URL doc\\source\\${{ github.workflow }}\\${{ github.job }}_basekit.txt
    - name: Intel® oneAPI HPC Toolkit
      run: scripts/list_components_windows.bat $WINDOWS_HPCKIT_URL doc\\source\\${{ github.workflow }}\\${{ github.job }}_hpckit.txt

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.job }}
        path: doc/source/${{ github.workflow }}/${{ github.job }}_*

  linux:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: Intel® oneAPI Base Toolkit
      run: scripts/list_components_linux.sh $LINUX_BASEKIT_URL doc/source/${{ github.workflow }}/${{ github.job }}_basekit.txt
    - name: Intel® oneAPI HPC Toolkit
      run: scripts/list_components_linux.sh $LINUX_HPCKIT_URL doc/source/${{ github.workflow }}/${{ github.job }}_hpckit.txt
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.job }}
        path: doc/source/${{ github.workflow }}/${{ github.job }}_*

  linux_aitools:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: Intel® AI Tools Toolkit
      run: scripts/list_components_linux_aitools.sh $LINUX_AIKIT_URL doc/source/${{ github.workflow }}/${{ github.job }}.txt
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.job }}
        path: doc/source/${{ github.workflow }}/${{ github.job }}*

  linux_apt:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: setup apt repo
      run: scripts/setup_apt_repo_linux.sh
    - name: Intel® oneAPI packages provided in APT repository
      run: scripts/list_components_linux_apt.sh doc/source/${{ github.workflow }}/${{ github.job }}.txt

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.job }}
        path: doc/source/${{ github.workflow }}/${{ github.job }}.txt

  linux_yum_dnf:
    runs-on: ubuntu-latest
    container: fedora:37
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: setup yum/dnf repo
      run: scripts/setup_yum_dnf_repo_linux.sh
    - name: Intel® oneAPI packages provided in YUM/DNF repository
      run: scripts/list_components_linux_dnf.sh doc/source/${{ github.workflow }}/${{ github.job }}.txt

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.job }}
        path: doc/source/${{ github.workflow }}/${{ github.job }}.txt

  publish:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      pages: write
      contents: write
    needs: [windows, linux, linux_aitools, linux_apt, linux_yum_dnf]
    defaults:
      run:
        shell: bash
        working-directory: doc
    steps:
    - uses: actions/checkout@v3
    - name: Download artifacts - windows
      uses: actions/download-artifact@v4
      with:
        name: windows
        path: doc/source/${{ github.workflow }}
    - name: Download artifacts - linux
      uses: actions/download-artifact@v4
      with:
        name: linux
        path: doc/source/${{ github.workflow }}
    - name: Download artifacts - linux_apt
      uses: actions/download-artifact@v4
      with:
        name: linux_apt
        path: doc/source/${{ github.workflow }}
    - name: Download artifacts - linux_yum_dnf
      uses: actions/download-artifact@v4
      with:
        name: linux_yum_dnf
        path: doc/source/${{ github.workflow }}
    - name: Download artifacts - linux_aitools
      uses: actions/download-artifact@v4
      with:
        name: linux_aitools
        path: doc/source/${{ github.workflow }}
    - uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: Install prerequisites
      run: python -m pip install --quiet -r requirements.txt
    - name: Build doc
      run: |
        find source/${{ github.workflow }} -maxdepth 1 -type f ! -name "*apt*" ! -name "*yum*" ! -name "*aitools*" -exec sed -i -e 1,5d {} \;
        find source/${{ github.workflow }} -maxdepth 1 -type f -name "*windows*" -exec sed -i -e 1,2d {} \; -exec sed -i s"/\r//g" {} \;
        sed -i -e 1,7d source/${{ github.workflow }}/linux_yum_dnf.txt
        make html
    - name: Save built doc as artifact
      uses: actions/upload-artifact@v4
      with:
          name: ${{ github.job }}
          path: doc/build
    - name: Checkout gh-pages
      if: ${{ github.ref == 'refs/heads/master' }}
      uses: actions/checkout@v3
      with:
        ref: gh-pages
        path: gh-pages
    - name: Publish to github pages
      if: ${{ github.ref == 'refs/heads/master' }}
      run: |
          cd ../gh-pages
          rm -rf *
          touch .nojekyll
          cp -r ../doc/build/html/* .
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Update from github actions" || exit 0
          git push
