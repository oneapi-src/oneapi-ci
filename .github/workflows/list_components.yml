# SPDX-FileCopyrightText: 2022 Intel Corporation
#
# SPDX-License-Identifier: MIT

name: list_components

on:
  push: {}
  workflow_dispatch: {}
  schedule:
    - cron: '0 0 * * *'

env:
  WINDOWS_BASEKIT_URL: https:/registrationcenter-download.intel.com/akdlm/IRC_NAS/c961e083-5685-4f0b-ada5-c6cf16f561dd/w_BaseKit_p_2023.1.0.47256.exe
  WINDOWS_HPCKIT_URL: https:/registrationcenter-download.intel.com/akdlm/IRC_NAS/2a13d966-fcc5-4a66-9fcc-50603820e0c9/w_HPCKit_p_2023.1.0.46357.exe
  WINDOWS_IOTKIT_URL: https:/registrationcenter-download.intel.com/akdlm/IRC_NAS/365570df-0a47-463b-b1eb-cda0c2e04bc6/w_IoTKit_p_2023.1.0.46355.exe
  WINDOWS_RENDERKIT_URL: https:/registrationcenter-download.intel.com/akdlm/IRC_NAS/62054265-968e-4c68-88dd-c1a06861dba2/w_RenderKit_p_2023.1.0.47568.exe
  LINUX_BASEKIT_URL: https:/registrationcenter-download.intel.com/akdlm/IRC_NAS/7deeaac4-f605-4bcf-a81b-ea7531577c61/l_BaseKit_p_2023.1.0.46401.sh
  LINUX_HPCKIT_URL: https:/registrationcenter-download.intel.com/akdlm/IRC_NAS/1ff1b38a-8218-4c53-9956-f0b264de35a4/l_HPCKit_p_2023.1.0.46346.sh
  LINUX_IOTKIT_URL: https:/registrationcenter-download.intel.com/akdlm/IRC_NAS/c1cb379a-6aab-4f18-a8c9-611ca8905ef8/l_IoTKit_p_2023.1.0.46344.sh
  LINUX_AIKIT_URL: https://registrationcenter-download.intel.com/akdlm/IRC_NAS/ef4efa4d-9b83-4994-a122-d5a4d2dec84c/l_AIKit_p_2023.1.1.48862.sh
  LINUX_DLFDKIT_URL: https:/registrationcenter-download.intel.com/akdlm/IRC_NAS/a7f1659f-558b-4131-a839-ab5ff2584c77/l_DLFDKit_p_2023.1.0.46364.sh
  LINUX_RENDERKIT_URL: https:/registrationcenter-download.intel.com/akdlm/IRC_NAS/79e1d29b-1546-4795-b2a4-ae5f8d504df2/l_RenderKit_p_2023.1.0.47259.sh
  MACOS_BASEKIT_URL: https:/registrationcenter-download.intel.com/akdlm/IRC_NAS/2516a0a0-de4d-4f3d-9e83-545b32127dbb/m_BaseKit_p_2023.1.0.45568.dmg
  MACOS_HPCKIT_URL: https:/registrationcenter-download.intel.com/akdlm/IRC_NAS/a99cb1c5-5af6-4824-9811-ae172d24e594/m_HPCKit_p_2023.1.0.44543.dmg
  MACOS_RENDERKIT_URL: https:/registrationcenter-download.intel.com/akdlm/IRC_NAS/da33ae67-fcf0-4b4d-8e41-a4b31e9b49fd/m_RenderKit_p_2023.1.0.47135.dmg

jobs:
  windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Intel® oneAPI Base Toolkit
      run: scripts/list_components_windows.bat $WINDOWS_BASEKIT_URL doc\\source\\${{ github.workflow }}\\${{ github.job }}_basekit.txt
    - name: Intel® oneAPI HPC Toolkit
      run: scripts/list_components_windows.bat $WINDOWS_HPCKIT_URL doc\\source\\${{ github.workflow }}\\${{ github.job }}_hpckit.txt
    - name: Intel® oneAPI IoT Toolkit
      run: scripts/list_components_windows.bat $WINDOWS_IOTKIT_URL doc\\source\\${{ github.workflow }}\\${{ github.job }}_iotkit.txt
    - name: Intel® oneAPI Rendering Toolkit
      run: scripts/list_components_windows.bat $WINDOWS_RENDERKIT_URL doc\\source\\${{ github.workflow }}\\${{ github.job }}_renderkit.txt

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ github.job }}
        path: doc/source/${{ github.workflow }}/${{ github.job }}_*

  linux:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Intel® oneAPI Base Toolkit
      run: scripts/list_components_linux.sh $LINUX_BASEKIT_URL doc/source/${{ github.workflow }}/${{ github.job }}_basekit.txt
    - name: Intel® oneAPI HPC Toolkit
      run: scripts/list_components_linux.sh $LINUX_HPCKIT_URL doc/source/${{ github.workflow }}/${{ github.job }}_hpckit.txt
    - name: Intel® oneAPI IoT Toolkit
      run: scripts/list_components_linux.sh $LINUX_IOTKIT_URL doc/source/${{ github.workflow }}/${{ github.job }}_iotkit.txt
    - name: Intel® AI Analytics Toolkit
      run: scripts/list_components_linux.sh $LINUX_AIKIT_URL doc/source/${{ github.workflow }}/${{ github.job }}_aikit.txt
    - name: Intel® oneAPI DL Framework Developer Toolkit
      run: scripts/list_components_linux.sh $LINUX_DLFDKIT_URL doc/source/${{ github.workflow }}/${{ github.job }}_dlfdkit.txt
    - name: Intel® oneAPI Rendering Toolkit
      run: scripts/list_components_linux.sh $LINUX_RENDERKIT_URL doc/source/${{ github.workflow }}/${{ github.job }}_renderkit.txt

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ github.job }}
        path: doc/source/${{ github.workflow }}/${{ github.job }}_*

  linux_apt:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: setup apt repo
      run: scripts/setup_apt_repo_linux.sh
    - name: Intel® oneAPI packages provided in APT repository
      run: scripts/list_components_linux_apt.sh doc/source/${{ github.workflow }}/${{ github.job }}.txt

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ github.job }}
        path: doc/source/${{ github.workflow }}/${{ github.job }}.txt

  linux_yum_dnf:
    runs-on: ubuntu-20.04
    container: fedora
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: setup yum/dnf repo
      run: scripts/setup_yum_dnf_repo_linux.sh
    - name: Intel® oneAPI packages provided in YUM/DNF repository
      run: scripts/list_components_linux_dnf.sh doc/source/${{ github.workflow }}/${{ github.job }}.txt

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ github.job }}
        path: doc/source/${{ github.workflow }}/${{ github.job }}.txt

  macos:
    runs-on: macos-latest
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Intel® oneAPI Base Toolkit
      run: scripts/list_components_macos.sh $MACOS_BASEKIT_URL doc/source/${{ github.workflow }}/${{ github.job }}_basekit.txt
    - name: Intel® oneAPI HPC Toolkit
      run: scripts/list_components_macos.sh $MACOS_HPCKIT_URL doc/source/${{ github.workflow }}/${{ github.job }}_hpckit.txt
    - name: Intel® oneAPI Rendering Toolkit
      run: scripts/list_components_macos.sh $MACOS_RENDERKIT_URL doc/source/${{ github.workflow }}/${{ github.job }}_renderkit.txt

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ github.job }}
        path: doc/source/${{ github.workflow }}/${{ github.job }}_*

  publish:
    runs-on: ubuntu-20.04
    needs: [windows, linux, linux_apt, linux_yum_dnf, macos]
    defaults:
      run:
        shell: bash
        working-directory: doc
    steps:
    - uses: actions/checkout@v2
    - name: Download artifacts - windows
      uses: actions/download-artifact@v2
      with:
        name: windows
        path: doc/source/${{ github.workflow }}
    - name: Download artifacts - linux
      uses: actions/download-artifact@v2
      with:
        name: linux
        path: doc/source/${{ github.workflow }}
    - name: Download artifacts - linux_apt
      uses: actions/download-artifact@v2
      with:
        name: linux_apt
        path: doc/source/${{ github.workflow }}
    - name: Download artifacts - linux_yum_dnf
      uses: actions/download-artifact@v2
      with:
        name: linux_yum_dnf
        path: doc/source/${{ github.workflow }}
    - name: Download artifacts - macos
      uses: actions/download-artifact@v2
      with:
        name: macos
        path: doc/source/${{ github.workflow }}
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install prerequisites
      run: python -m pip install --quiet -r requirements.txt
    - name: Build doc
      run: |
        find source/${{ github.workflow }} -maxdepth 1 -type f ! -name "*apt*" ! -name "*yum*" -exec sed -i -e 1,5d {} \;
        find source/${{ github.workflow }} -maxdepth 1 -type f -name "*windows*" -exec sed -i -e 1,2d {} \; -exec sed -i s"/\r//g" {} \;
        sed -i -e 1,7d source/${{ github.workflow }}/linux_yum_dnf.txt
        make html
    - name: Save built doc as artifact
      uses: actions/upload-artifact@v2
      with:
          name: ${{ github.job }}
          path: doc/build
    - name: Checkout gh-pages
      if: ${{ github.ref == 'refs/heads/master' }}
      uses: actions/checkout@v2
      with:
        ref: gh-pages
        path: gh-pages
    - name: Publish to github pages
      if: ${{ github.ref == 'refs/heads/master' }}
      run: |
          cd ../gh-pages
          rm -rf *
          touch .nojekyll
          cp -r ../doc/build/html/* .
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Update from github actions" || exit 0
          git push
