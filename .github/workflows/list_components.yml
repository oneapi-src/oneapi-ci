# SPDX-FileCopyrightText: 2022 Intel Corporation
#
# SPDX-License-Identifier: MIT

name: list_components

on:
  push: {}
  workflow_dispatch: {}
  schedule:
    - cron: '0 0 * * *'

env:
  WINDOWS_BASEKIT_URL: https://registrationcenter-download.intel.com/akdlm//IRC_NAS/c997c613-a165-48a0-aeb7-9932899c0cf1/w_BaseKit_p_2024.0.0.49557.exe
  WINDOWS_HPCKIT_URL: https://registrationcenter-download.intel.com/akdlm//IRC_NAS/23d88996-7eeb-414b-9da5-e33c5c285c6a/w_HPCKit_p_2024.0.0.49577.exe
  WINDOWS_IOTKIT_URL: https://registrationcenter-download.intel.com/akdlm/IRC_NAS/dbdf4222-ff39-4c53-9b1a-23585f9a5e25/w_IoTKit_p_2023.2.0.49274.exe
  WINDOWS_RENDERKIT_URL: https://registrationcenter-download.intel.com/akdlm//IRC_NAS/9926fc73-b1b5-4a81-afbd-53d7e234b267/w_RenderKit_p_2024.0.0.49649.exe
  LINUX_BASEKIT_URL: https://registrationcenter-download.intel.com/akdlm//IRC_NAS/785409ee-4825-44b6-af24-ea8b5df4866b/l_BaseKit_p_2024.0.0.49556.sh
  LINUX_HPCKIT_URL: https://registrationcenter-download.intel.com/akdlm//IRC_NAS/c5cee152-b1b7-40b2-ac59-861c48f47b6c/l_HPCKit_p_2024.0.0.49582_offline.sh
  LINUX_IOTKIT_URL: https://registrationcenter-download.intel.com/akdlm/IRC_NAS/792937e1-5667-47a9-a9df-e1142fce55b5/l_IoTKit_p_2023.2.0.49273.sh
  LINUX_AIKIT_URL: https://registrationcenter-download.intel.com/akdlm/IRC_NAS/af4bc50d-898e-45a4-8f7d-378448ba294a/l_AIKit_p_2023.2.0.48997.sh
  LINUX_RENDERKIT_URL: https://registrationcenter-download.intel.com/akdlm//IRC_NAS/0ff3b966-7f51-472c-87c6-f2d72d8a32df/l_RenderKit_p_2024.0.0.49646.sh
  MACOS_BASEKIT_URL: https://registrationcenter-download.intel.com/akdlm/IRC_NAS/cd013e6c-49c4-488b-8b86-25df6693a9b7/m_BaseKit_p_2023.2.0.49398.dmg
  MACOS_HPCKIT_URL: https://registrationcenter-download.intel.com/akdlm/IRC_NAS/edb4dc2f-266f-47f2-8d56-21bc7764e119/m_HPCKit_p_2023.2.0.49443.dmg
  MACOS_RENDERKIT_URL: https://registrationcenter-download.intel.com/akdlm//IRC_NAS/66040c37-efde-4e9d-91ed-90886fcb2491/m_RenderKit_p_2024.0.0.49648.dmg

jobs:
  windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Intel® oneAPI Base Toolkit
      run: scripts/list_components_windows.bat $WINDOWS_BASEKIT_URL doc\\source\\${{ github.workflow }}\\${{ github.job }}_basekit.txt
    - name: Intel® oneAPI HPC Toolkit
      run: scripts/list_components_windows.bat $WINDOWS_HPCKIT_URL doc\\source\\${{ github.workflow }}\\${{ github.job }}_hpckit.txt
    - name: Intel® oneAPI IoT Toolkit
      run: scripts/list_components_windows.bat $WINDOWS_IOTKIT_URL doc\\source\\${{ github.workflow }}\\${{ github.job }}_iotkit.txt
    - name: Intel® oneAPI Rendering Toolkit
      run: scripts/list_components_windows.bat $WINDOWS_RENDERKIT_URL doc\\source\\${{ github.workflow }}\\${{ github.job }}_renderkit.txt

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ github.job }}
        path: doc/source/${{ github.workflow }}/${{ github.job }}_*

  linux:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Intel® oneAPI Base Toolkit
      run: scripts/list_components_linux.sh $LINUX_BASEKIT_URL doc/source/${{ github.workflow }}/${{ github.job }}_basekit.txt
    - name: Intel® oneAPI HPC Toolkit
      run: scripts/list_components_linux.sh $LINUX_HPCKIT_URL doc/source/${{ github.workflow }}/${{ github.job }}_hpckit.txt
    - name: Intel® oneAPI IoT Toolkit
      run: scripts/list_components_linux.sh $LINUX_IOTKIT_URL doc/source/${{ github.workflow }}/${{ github.job }}_iotkit.txt
    - name: Intel® AI Analytics Toolkit
      run: scripts/list_components_linux.sh $LINUX_AIKIT_URL doc/source/${{ github.workflow }}/${{ github.job }}_aikit.txt
    - name: Intel® oneAPI Rendering Toolkit
      run: scripts/list_components_linux.sh $LINUX_RENDERKIT_URL doc/source/${{ github.workflow }}/${{ github.job }}_renderkit.txt

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ github.job }}
        path: doc/source/${{ github.workflow }}/${{ github.job }}_*

  linux_apt:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: setup apt repo
      run: scripts/setup_apt_repo_linux.sh
    - name: Intel® oneAPI packages provided in APT repository
      run: scripts/list_components_linux_apt.sh doc/source/${{ github.workflow }}/${{ github.job }}.txt

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ github.job }}
        path: doc/source/${{ github.workflow }}/${{ github.job }}.txt

  linux_yum_dnf:
    runs-on: ubuntu-20.04
    container: fedora:37
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: setup yum/dnf repo
      run: scripts/setup_yum_dnf_repo_linux.sh
    - name: Intel® oneAPI packages provided in YUM/DNF repository
      run: scripts/list_components_linux_dnf.sh doc/source/${{ github.workflow }}/${{ github.job }}.txt

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ github.job }}
        path: doc/source/${{ github.workflow }}/${{ github.job }}.txt

  macos:
    runs-on: macos-latest
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Intel® oneAPI Base Toolkit
      run: scripts/list_components_macos.sh $MACOS_BASEKIT_URL doc/source/${{ github.workflow }}/${{ github.job }}_basekit.txt
    - name: Intel® oneAPI HPC Toolkit
      run: scripts/list_components_macos.sh $MACOS_HPCKIT_URL doc/source/${{ github.workflow }}/${{ github.job }}_hpckit.txt
    - name: Intel® oneAPI Rendering Toolkit
      run: scripts/list_components_macos.sh $MACOS_RENDERKIT_URL doc/source/${{ github.workflow }}/${{ github.job }}_renderkit.txt

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ github.job }}
        path: doc/source/${{ github.workflow }}/${{ github.job }}_*

  publish:
    runs-on: ubuntu-20.04
    needs: [windows, linux, linux_apt, linux_yum_dnf, macos]
    defaults:
      run:
        shell: bash
        working-directory: doc
    steps:
    - uses: actions/checkout@v2
    - name: Download artifacts - windows
      uses: actions/download-artifact@v2
      with:
        name: windows
        path: doc/source/${{ github.workflow }}
    - name: Download artifacts - linux
      uses: actions/download-artifact@v2
      with:
        name: linux
        path: doc/source/${{ github.workflow }}
    - name: Download artifacts - linux_apt
      uses: actions/download-artifact@v2
      with:
        name: linux_apt
        path: doc/source/${{ github.workflow }}
    - name: Download artifacts - linux_yum_dnf
      uses: actions/download-artifact@v2
      with:
        name: linux_yum_dnf
        path: doc/source/${{ github.workflow }}
    - name: Download artifacts - macos
      uses: actions/download-artifact@v2
      with:
        name: macos
        path: doc/source/${{ github.workflow }}
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install prerequisites
      run: python -m pip install --quiet -r requirements.txt
    - name: Build doc
      run: |
        find source/${{ github.workflow }} -maxdepth 1 -type f ! -name "*apt*" ! -name "*yum*" -exec sed -i -e 1,5d {} \;
        find source/${{ github.workflow }} -maxdepth 1 -type f -name "*windows*" -exec sed -i -e 1,2d {} \; -exec sed -i s"/\r//g" {} \;
        sed -i -e 1,7d source/${{ github.workflow }}/linux_yum_dnf.txt
        make html
    - name: Save built doc as artifact
      uses: actions/upload-artifact@v2
      with:
          name: ${{ github.job }}
          path: doc/build
    - name: Checkout gh-pages
      if: ${{ github.ref == 'refs/heads/master' }}
      uses: actions/checkout@v2
      with:
        ref: gh-pages
        path: gh-pages
    - name: Publish to github pages
      if: ${{ github.ref == 'refs/heads/master' }}
      run: |
          cd ../gh-pages
          rm -rf *
          touch .nojekyll
          cp -r ../doc/build/html/* .
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Update from github actions" || exit 0
          git push
