# SPDX-FileCopyrightText: 2020 Intel Corporation
#
# SPDX-License-Identifier: MIT

name: build_windows_online_scheduled

on:
  push: {}
  workflow_dispatch: {}
  schedule:
    - cron: '0 0 * * *'

env:
  WINDOWS_BASEKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/18497/w_BaseKit_p_2022.1.2.154.exe
  WINDOWS_HPCKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/18529/w_HPCKit_p_2022.1.2.116.exe
  WINDOWS_IOTKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/18530/w_IoTKit_p_2022.1.2.107.exe
  WINDOWS_RENDERKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/18398/w_RenderKit_p_2022.1.0.88.exe
  SAMPLES_TAG: 2022.1.0

jobs:
  build_windows_all:
    runs-on: windows-latest
    timeout-minutes: 90
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: tracert
      run: tracert -h 1 installer.repos.intel.com
    - name: install_basekit
      run: scripts/install_windows.bat $WINDOWS_BASEKIT_URL
    - name: install_hpckit
      run: scripts/install_windows.bat $WINDOWS_HPCKIT_URL
    - name: install_iotkit
      run: scripts/install_windows.bat $WINDOWS_IOTKIT_URL
    - name: install_renderkit
      run: scripts/install_windows.bat $WINDOWS_RENDERKIT_URL
    - name: build_c++
      run: scripts/build_windows.bat c++ "" $SAMPLES_TAG
    - name: build_fortran
      run: scripts/build_windows.bat fortran "" $SAMPLES_TAG
    - name: build_dpc++
      run: scripts/build_windows.bat dpc++ "" $SAMPLES_TAG

    # Delete the following if you don't want to save install logs
    - name: Saving install logs
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: InstallLogs_${{ github.job }}
        path: |
          extract.log
          bootstrapper*
          installer*
        retention-days: 7
