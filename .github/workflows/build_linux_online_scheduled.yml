# SPDX-FileCopyrightText: 2020 Intel Corporation
#
# SPDX-License-Identifier: MIT

name: build_linux_online_scheduled

on:
  push: {}
  workflow_dispatch: {}
  schedule:
    - cron: '0 * * * *'

env:
  LINUX_BASEKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/19079/l_BaseKit_p_2023.0.0.25537.sh
  LINUX_HPCKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/19084/l_HPCKit_p_2023.0.0.25400.sh
  LINUX_IOTKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/19082/l_IoTKit_p_2023.0.0.25397.sh
  LINUX_AIKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/19090/l_AIKit_p_2023.0.0.26100.sh
  LINUX_DLFDKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/19081/l_DLFDKit_p_2023.0.0.25405.sh
  LINUX_RENDERKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/19087/l_RenderKit_p_2023.0.0.25403.sh
  SAMPLES_TAG: 2023.0.0

jobs:
  build_linux_basekit:
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: traceroute
      run: |
        sudo apt-get install -y traceroute
        sudo traceroute --tcp installer.repos.intel.com
    - name: install_basekit
      run: scripts/install_linux.sh $LINUX_BASEKIT_URL
    - name: build_dpcpp
      run: scripts/build_linux.sh dpc++ $SAMPLES_TAG

    # Delete the following if you don't want to save install logs
    - name: Saving install logs
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: InstallLogs_${{ github.job }}
        path: |
          bootstrapper*
          installer*
        retention-days: 7

  build_linux_hpckit:
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: traceroute
      run: |
        sudo apt-get install -y traceroute
        sudo traceroute --tcp installer.repos.intel.com
    - name: install_hpckit
      run: scripts/install_linux.sh $LINUX_HPCKIT_URL
    - name: build_c++
      run: scripts/build_linux.sh c++ $SAMPLES_TAG
    - name: build_fortran
      run: scripts/build_linux.sh fortran $SAMPLES_TAG
    - name: build_dpcpp
      run: scripts/build_linux.sh dpc++ $SAMPLES_TAG

    # Delete the following if you don't want to save install logs
    - name: Saving install logs
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: InstallLogs_${{ github.job }}
        path: |
          bootstrapper*
          installer*
        retention-days: 7

  build_linux_iotkit:
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: traceroute
      run: |
        sudo apt-get install -y traceroute
        sudo traceroute --tcp installer.repos.intel.com
    - name: install_iotkit
      run: scripts/install_linux.sh $LINUX_IOTKIT_URL
    - name: build_c++
      run: scripts/build_linux.sh c++ $SAMPLES_TAG

    # Delete the following if you don't want to save install logs
    - name: Saving install logs
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: InstallLogs_${{ github.job }}
        path: |
          bootstrapper*
          installer*
        retention-days: 7

  build_linux_dlfdkit:
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: traceroute
      run: |
        sudo apt-get install -y traceroute
        sudo traceroute --tcp installer.repos.intel.com
    - name: install_dlfdkit
      run: scripts/install_linux.sh $LINUX_DLFDKIT_URL

    # Delete the following if you don't want to save install logs
    - name: Saving install logs
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: InstallLogs_${{ github.job }}
        path: |
          bootstrapper*
          installer*
        retention-days: 7

  build_linux_aikit:
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: traceroute
      run: |
        sudo apt-get install -y traceroute
        sudo traceroute --tcp installer.repos.intel.com
    - name: install_aikit
      run: scripts/install_linux.sh $LINUX_AIKIT_URL

    # Delete the following if you don't want to save install logs
    - name: Saving install logs
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: InstallLogs_${{ github.job }}
        path: |
          bootstrapper*
          installer*
        retention-days: 7

  build_linux_renderkit:
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: traceroute
      run: |
        sudo apt-get install -y traceroute
        sudo traceroute --tcp installer.repos.intel.com
    - name: install_renderkit
      run: scripts/install_linux.sh $LINUX_RENDERKIT_URL

    # Delete the following if you don't want to save install logs
    - name: Saving install logs
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: InstallLogs_${{ github.job }}
        path: |
          bootstrapper*
          installer*
        retention-days: 7
