name: build_all

on:
  push

jobs:
  build_windows_cpp:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: build_windows_cpp
      run: |
        curl.exe --output w_hpckit.exe --url https://registrationcenter-download.intel.com/akdlm/irc_nas/16863/w_HPCKit_b_2021.1.8.1882.exe
        ./w_hpckit.exe -s -x -f w_hpckit_extracted 
        w_hpckit_extracted/bootstrapper.exe -s --action install --components=intel.oneapi.win.cpp-compiler --eula=accept --continue-with-optional-error=yes -p=NEED_VS2017_INTEGRATION=0 -p=NEED_VS2019_INTEGRATION=0
        cd src
        cd c++
        echo '"C:\Program Files (x86)\Intel\oneAPI\setvars.bat" && nmake /f Makefile.nmake"' > build.bat
        ./build.bat
  build_windows_dpcpp:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: build_windows_dpcpp
      run: |
        curl.exe --output w_basekit.exe --url https://registrationcenter-download.intel.com/akdlm/irc_nas/16862/w_BaseKit_b_2021.1.8.1967.exe
        ./w_basekit.exe -s -x -f w_basekit_extracted 
        w_basekit_extracted/bootstrapper.exe -s --action install --components=intel.oneapi.win.dpcpp-compiler --eula=accept --continue-with-optional-error=yes -p=NEED_VS2017_INTEGRATION=0 -p=NEED_VS2019_INTEGRATION=0
        cd src
        cd dpc++
        echo '"C:\Program Files (x86)\Intel\oneAPI\setvars.bat" && nmake /f Makefile.nmake"' > build.bat
        ./build.bat
  build_linux_apt_cpp:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: build_linux_apt_cpp
      run: |
        export DEBIAN_FRONTEND=noninteractive
        sudo apt-get update
        sudo apt-get install -y wget build-essential pkg-config cmake ca-certificates gnupg
        wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
        sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
        echo "deb https://apt.repos.intel.com/oneapi all main" | sudo tee /etc/apt/sources.list.d/oneAPI.list
        sudo apt-get update
        sudo apt-get install -y intel-oneapi-icc
        cd src/c++
        set +e
        source /opt/intel/oneapi/setvars.sh
        set -e
        make
  build_linux_apt_dpcpp:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: build_linux_apt_dpcpp
      run: |
        export DEBIAN_FRONTEND=noninteractive
        sudo apt-get update
        sudo apt-get install -y wget build-essential pkg-config cmake ca-certificates gnupg
        wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
        sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
        echo "deb https://apt.repos.intel.com/oneapi all main" | sudo tee /etc/apt/sources.list.d/oneAPI.list
        sudo apt-get update
        sudo apt-get install -y intel-oneapi-dpcpp-compiler
        cd src/dpc++
        set +e
        source /opt/intel/oneapi/setvars.sh
        set -e
        make
  build_linux_container_cpp:
    runs-on: ubuntu-latest
    container: intel/oneapi-hpckit
    steps:
    - uses: actions/checkout@v2
    - name: build_linux_container_cpp
      run: |
          cd src/c++
          make
  build_linux_container_cpp:
    runs-on: ubuntu-latest
    container: intel/oneapi-basekit
    steps:
    - uses: actions/checkout@v2
    - name: build_linux_container_dpcpp
      run: |
          cd src/dpc++
          make
  build_macos_cpp:
    runs-on: macos-latest
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: build_macos_cpp
      run: |
        curl --output m_hpckit.dmg --url https://registrationcenter-download.intel.com/akdlm/irc_nas/16865/m_HPCKit_b_2021.1.8.1885.dmg
        hdiutil attach m_hpckit.dmg
        sudo /Volumes/m_HPCKit_b_2021.1.8.1885/bootstrapper.app/Contents/MacOS/bootstrapper -s --action install --components=intel.oneapi.mac.cpp-compiler --eula=accept --continue-with-optional-error=yes
        cd src/c++
        set +e
        source /opt/intel/oneapi/setvars.sh
        set -e
        make -f Makefile.macos
        