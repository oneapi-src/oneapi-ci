# SPDX-FileCopyrightText: 2022 Intel Corporation
#
# SPDX-License-Identifier: MIT

name: build_all
permissions: read-all

on: push

env:
  WINDOWS_BASEKIT_URL: https://registrationcenter-download.intel.com/akdlm/IRC_NAS/62641e01-1e8d-4ace-91d6-ae03f7f8a71f/w_BaseKit_p_2024.0.0.49563_offline.exe
  WINDOWS_HPCKIT_URL: https://registrationcenter-download.intel.com/akdlm/IRC_NAS/5b36181e-4974-4733-91c7-0c10c54900a5/w_HPCKit_p_2024.0.0.49588_offline.exe
  LINUX_BASEKIT_URL: https://registrationcenter-download.intel.com/akdlm/IRC_NAS/20f4e6a1-6b0b-4752-b8c1-e5eacba10e01/l_BaseKit_p_2024.0.0.49564_offline.sh
  LINUX_HPCKIT_URL: https://registrationcenter-download.intel.com/akdlm/IRC_NAS/1b2baedd-a757-4a79-8abb-a5bf15adae9a/l_HPCKit_p_2024.0.0.49589_offline.sh
  LINUX_AIKIT_URL: https://registrationcenter-download.intel.com/akdlm/IRC_NAS/4c0e0228-7d3b-40e2-8a2c-eae82f77b0c8/l_AITools.2024.0.1.3.sh
  MACOS_HPCKIT_URL: https://registrationcenter-download.intel.com/akdlm/IRC_NAS/edb4dc2f-266f-47f2-8d56-21bc7764e119/m_HPCKit_p_2023.2.0.49443_offline.dmg
  WINDOWS_CPP_COMPONENTS: intel.oneapi.win.cpp-dpcpp-common
  WINDOWS_FORTRAN_COMPONENTS: intel.oneapi.win.ifort-compiler
  WINDOWS_DPCPP_COMPONENTS: intel.oneapi.win.cpp-dpcpp-common
  LINUX_CPP_COMPONENTS: intel-oneapi-dpcpp-cpp-compiler
  LINUX_FORTRAN_COMPONENTS: intel-oneapi-compiler-fortran
  LINUX_DPCPP_COMPONENTS: intel-oneapi-compiler-dpcpp-cpp
  LINUX_CPP_COMPONENTS_WEB: intel.oneapi.lin.dpcpp-cpp-compiler
  LINUX_FORTRAN_COMPONENTS_WEB: intel.oneapi.lin.ifort-compiler
  LINUX_DPCPP_COMPONENTS_WEB: intel.oneapi.lin.dpcpp-cpp-compiler
  MACOS_CPP_COMPONENTS: intel.oneapi.mac.cpp-compiler
  MACOS_FORTRAN_COMPONENTS: intel.oneapi.mac.ifort-compiler
  CACHE_NUMBER: 6
  SAMPLES_TAG: 2024.0.0
  COMPILER_VERSION: 2024.0.0
  TBB_VERSION: 2021.11.0
  VS_VER: vs2022

jobs:
  build_windows_cpp:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: cache install
      id: cache-install
      uses: actions/cache@v2
      with:
        path: |
            C:\Program Files (x86)\Intel\oneAPI\setvars-vcvarsall.bat
            C:\Program Files (x86)\Intel\oneAPI\compiler
        key: install-${{ env.CACHE_NUMBER }}-${{ env.WINDOWS_HPCKIT_URL }}-${{ env.WINDOWS_CPP_COMPONENTS }}-compiler-${{ hashFiles('**/scripts/cache_exclude_windows.sh') }}
    - name: install
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: scripts/install_windows.bat $WINDOWS_HPCKIT_URL $WINDOWS_CPP_COMPONENTS
    - name: build
      run: scripts/build_windows.bat c++ $VS_VER $SAMPLES_TAG
    - name: exclude unused files from cache
      if: steps.cache-install.outputs.cache-hit != 'true'
      shell: bash
      run: scripts/cache_exclude_windows.sh

    # Delete the following if you don't want to save install logs
    - name: Saving install logs
      if: steps.cache-install.outputs.cache-hit != 'true'
      uses: actions/upload-artifact@v2
      with:
        name: InstallLogs_${{ github.job }}
        path: |
          extract.log
          bootstrapper*
          installer*
        retention-days: 7

  build_windows_fortran:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: cache install
      id: cache-install
      uses: actions/cache@v2
      with:
        path: |
            C:\Program Files (x86)\Intel\oneAPI\setvars-vcvarsall.bat
            C:\Program Files (x86)\Intel\oneAPI\compiler
        key: install-${{ env.CACHE_NUMBER }}-${{ env.WINDOWS_HPCKIT_URL }}-${{ env.WINDOWS_FORTRAN_COMPONENTS }}-compiler-${{ hashFiles('**/scripts/cache_exclude_windows.sh') }}
    - name: install
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: scripts/install_windows.bat $WINDOWS_HPCKIT_URL $WINDOWS_FORTRAN_COMPONENTS
    - name: build
      run: scripts/build_windows.bat fortran $VS_VER $SAMPLES_TAG
    - name: exclude unused files from cache
      if: steps.cache-install.outputs.cache-hit != 'true'
      shell: bash
      run: scripts/cache_exclude_windows.sh

    # Delete the following if you don't want to save install logs
    - name: Saving install logs
      if: steps.cache-install.outputs.cache-hit != 'true'
      uses: actions/upload-artifact@v2
      with:
        name: InstallLogs_${{ github.job }}
        path: |
          extract.log
          bootstrapper*
          installer*
        retention-days: 7

  build_windows_dpcpp:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: cache install
      id: cache-install
      uses: actions/cache@v2
      with:
        path: |
          C:\Program Files (x86)\Intel\oneAPI\setvars-vcvarsall.bat
          C:\Program Files (x86)\Intel\oneAPI\compiler
          C:\Program Files (x86)\Intel\oneAPI\tbb
          C:\Windows\System32\OpenCL.dll
        key: install-${{ env.CACHE_NUMBER }}-${{ env.WINDOWS_BASEKIT_URL }}-${{ env.WINDOWS_DPCPP_COMPONENTS }}-compiler-tbb-opencl-${{ hashFiles('**/scripts/cache_exclude_windows.sh') }}
    - name: install
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: scripts/install_windows.bat $WINDOWS_BASEKIT_URL $WINDOWS_DPCPP_COMPONENTS
    - name: restore registry on cache hit
      if: steps.cache-install.outputs.cache-hit == 'true'
      run: scripts/restore_registry.bat $COMPILER_VERSION $TBB_VERSION
    - name: build
      run: scripts/build_windows.bat dpc++ $VS_VER $SAMPLES_TAG
    - name: exclude unused files from cache
      if: steps.cache-install.outputs.cache-hit != 'true'
      shell: bash
      run: scripts/cache_exclude_windows.sh

    # Delete the following if you don't want to save install logs
    - name: Saving install logs
      if: steps.cache-install.outputs.cache-hit != 'true'
      uses: actions/upload-artifact@v2
      with:
        name: InstallLogs_${{ github.job }}
        path: |
          extract.log
          bootstrapper*
          installer*
        retention-days: 7

  build_linux_cpp:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: cache install
      id: cache-install
      uses: actions/cache@v2
      with:
        path: |
          /opt/intel/oneapi/compiler
        key: install-${{ env.CACHE_NUMBER }}-${{ env.LINUX_HPCKIT_URL }}-${{ env.LINUX_CPP_COMPONENTS_WEB }}-compiler-${{ hashFiles('**/scripts/cache_exclude_linux.sh') }}
    - name: install
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: scripts/install_linux.sh $LINUX_HPCKIT_URL $LINUX_CPP_COMPONENTS_WEB
    - name: build
      run: scripts/build_linux.sh c++ $SAMPLES_TAG
    - name: exclude unused files from cache
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: scripts/cache_exclude_linux.sh

    # Delete the following if you don't want to save install logs
    - name: Saving install logs
      if: steps.cache-install.outputs.cache-hit != 'true'
      uses: actions/upload-artifact@v2
      with:
        name: InstallLogs_${{ github.job }}
        path: |
          bootstrapper*
          installer*
        retention-days: 7

  build_linux_fortran:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: cache install
      id: cache-install
      uses: actions/cache@v2
      with:
        path: |
          /opt/intel/oneapi/compiler
        key: install-${{ env.CACHE_NUMBER }}-${{ env.LINUX_HPCKIT_URL }}-${{ env.LINUX_FORTRAN_COMPONENTS_WEB }}-compiler-${{ hashFiles('**/scripts/cache_exclude_linux.sh') }}
    - name: install
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: scripts/install_linux.sh $LINUX_HPCKIT_URL $LINUX_FORTRAN_COMPONENTS_WEB
    - name: build
      run: scripts/build_linux.sh fortran $SAMPLES_TAG
    - name: exclude unused files from cache
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: scripts/cache_exclude_linux.sh

    # Delete the following if you don't want to save install logs
    - name: Saving install logs
      if: steps.cache-install.outputs.cache-hit != 'true'
      uses: actions/upload-artifact@v2
      with:
        name: InstallLogs_${{ github.job }}
        path: |
          bootstrapper*
          installer*
        retention-days: 7

  build_linux_dpcpp:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: cache install
      id: cache-install
      uses: actions/cache@v2
      with:
        path: |
          /opt/intel/oneapi/compiler
          /opt/intel/oneapi/tbb
        key: install-${{ env.CACHE_NUMBER }}-${{ env.LINUX_BASEKIT_URL }}-${{ env.LINUX_DPCPP_COMPONENTS_WEB }}-compiler-tbb-${{ hashFiles('**/scripts/cache_exclude_linux.sh') }}
    - name: install
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: scripts/install_linux.sh $LINUX_BASEKIT_URL $LINUX_DPCPP_COMPONENTS_WEB
    - name: build
      run: scripts/build_linux.sh dpc++ $SAMPLES_TAG
    - name: exclude unused files from cache
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: scripts/cache_exclude_linux.sh

    # Delete the following if you don't want to save install logs
    - name: Saving install logs
      if: steps.cache-install.outputs.cache-hit != 'true'
      uses: actions/upload-artifact@v2
      with:
        name: InstallLogs_${{ github.job }}
        path: |
          bootstrapper*
          installer*
        retention-days: 7

  build_linux_aitools:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: cache install
      id: cache-install
      uses: actions/cache@v2
      with:
        path: |
          /intel/oneapi/intelpython
        key: install-${{ env.CACHE_NUMBER }}-${{ env.LINUX_AIKIT_URL }}-compiler-tbb-${{ hashFiles('**/scripts/cache_exclude_linux.sh') }}
    - name: install
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: scripts/install_linux_aitools.sh $LINUX_AIKIT_URL
    - name: build
      run: scripts/build_linux_aitools.sh $SAMPLES_TAG
    - name: exclude unused files from cache
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: scripts/cache_exclude_linux.sh

    # Delete the following if you don't want to save install logs
    - name: Saving install logs
      if: steps.cache-install.outputs.cache-hit != 'true'
      uses: actions/upload-artifact@v2
      with:
        name: InstallLogs_${{ github.job }}
        path: |
          bootstrapper*
          installer*
        retention-days: 7

  build_linux_apt_cpp:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: setup apt repo
      run: scripts/setup_apt_repo_linux.sh
    - name: collect versioned dependencies of apt packages
      run: scripts/apt_depends.sh $LINUX_CPP_COMPONENTS | tee depends.txt
    - name: cache install
      id: cache-install
      uses: actions/cache@v2
      with:
        path: |
          /opt/intel/oneapi/compiler
        key: install-${{ env.LINUX_CPP_COMPONENTS }}-${{ hashFiles('**/depends.txt') }}-compiler-${{ hashFiles('**/scripts/cache_exclude_linux.sh') }}
    - name: install
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: scripts/install_linux_apt.sh $LINUX_CPP_COMPONENTS
    - name: build
      run: scripts/build_linux.sh c++ $SAMPLES_TAG
    - name: exclude unused files from cache
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: scripts/cache_exclude_linux.sh

  build_linux_apt_fortran:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: setup apt repo
      run: scripts/setup_apt_repo_linux.sh
    - name: collect versioned dependencies of apt packages
      run: scripts/apt_depends.sh $LINUX_FORTRAN_COMPONENTS | tee depends.txt
    - name: cache install
      id: cache-install
      uses: actions/cache@v2
      with:
        path: |
          /opt/intel/oneapi/compiler
        key: install-${{ env.LINUX_FORTRAN_COMPONENTS }}-${{ hashFiles('**/depends.txt') }}-compiler-${{ hashFiles('**/scripts/cache_exclude_linux.sh') }}
    - name: install
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: scripts/install_linux_apt.sh $LINUX_FORTRAN_COMPONENTS
    - name: build
      run: scripts/build_linux.sh fortran $SAMPLES_TAG
    - name: exclude unused files from cache
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: scripts/cache_exclude_linux.sh

  build_linux_apt_dpcpp:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: setup apt repo
      run: scripts/setup_apt_repo_linux.sh
    - name: collect versioned dependencies of apt packages
      run: scripts/apt_depends.sh $LINUX_DPCPP_COMPONENTS | tee depends.txt
    - name: cache install
      id: cache-install
      uses: actions/cache@v2
      with:
        path: |
          /opt/intel/oneapi/compiler
          /opt/intel/oneapi/tbb
        key: install-${{ env.LINUX_DPCPP_COMPONENTS }}-${{ hashFiles('**/depends.txt') }}-compiler-tbb-${{ hashFiles('**/scripts/cache_exclude_linux.sh') }}
    - name: install
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: scripts/install_linux_apt.sh $LINUX_DPCPP_COMPONENTS
    - name: build
      run: scripts/build_linux.sh dpc++ $SAMPLES_TAG
    - name: exclude unused files from cache
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: scripts/cache_exclude_linux.sh

  build_linux_dnf_cpp:
    runs-on: ubuntu-20.04
    container: fedora:37
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: install prerequisites
      run: scripts/install_prerequisites_linux_dnf.sh
    - name: setup yum/dnf repo
      run: scripts/setup_yum_dnf_repo_linux.sh
    - name: collect versioned dependencies of dnf packages
      run: scripts/dnf_depends.sh $LINUX_CPP_COMPONENTS | tee depends.txt
    - name: cache install
      id: cache-install
      uses: actions/cache@v2
      with:
        path: |
          /opt/intel/oneapi/compiler
        key: install-${{ env.LINUX_CPP_COMPONENTS }}-${{ hashFiles('**/depends.txt') }}-compiler-${{ hashFiles('**/scripts/cache_exclude_linux.sh') }}
    - name: install
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: scripts/install_linux_dnf.sh $LINUX_CPP_COMPONENTS
    - name: build
      run: scripts/build_linux.sh c++ $SAMPLES_TAG
    - name: exclude unused files from cache
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: scripts/cache_exclude_linux.sh

  build_linux_dnf_fortran:
    runs-on: ubuntu-20.04
    container: fedora:37
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: install prerequisites
      run: scripts/install_prerequisites_linux_dnf.sh
    - name: setup yum/dnf repo
      run: scripts/setup_yum_dnf_repo_linux.sh
    - name: collect versioned dependencies of dnf packages
      run: scripts/dnf_depends.sh $LINUX_FORTRAN_COMPONENTS | tee depends.txt
    - name: cache install
      id: cache-install
      uses: actions/cache@v2
      with:
        path: |
          /opt/intel/oneapi/compiler
        key: install-${{ env.LINUX_FORTRAN_COMPONENTS }}-${{ hashFiles('**/depends.txt') }}-compiler-${{ hashFiles('**/scripts/cache_exclude_linux.sh') }}
    - name: install
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: scripts/install_linux_dnf.sh $LINUX_FORTRAN_COMPONENTS
    - name: build
      run: scripts/build_linux.sh fortran $SAMPLES_TAG
    - name: exclude unused files from cache
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: scripts/cache_exclude_linux.sh

  build_linux_dnf_dpcpp:
    runs-on: ubuntu-20.04
    container: fedora:37
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: install prerequisites
      run: scripts/install_prerequisites_linux_dnf.sh
    - name: setup yum/dnf repo
      run: scripts/setup_yum_dnf_repo_linux.sh
    - name: collect versioned dependencies of dnf packages
      run: scripts/dnf_depends.sh $LINUX_DPCPP_COMPONENTS | tee depends.txt
    - name: cache install
      id: cache-install
      uses: actions/cache@v2
      with:
        path: |
          /opt/intel/oneapi/compiler
          /opt/intel/oneapi/tbb
        key: install-${{ env.LINUX_DPCPP_COMPONENTS }}-${{ hashFiles('**/depends.txt') }}-compiler-tbb-${{ hashFiles('**/scripts/cache_exclude_linux.sh') }}
    - name: install
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: scripts/install_linux_dnf.sh $LINUX_DPCPP_COMPONENTS
    - name: build
      run: scripts/build_linux.sh dpc++ $SAMPLES_TAG
    - name: exclude unused files from cache
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: scripts/cache_exclude_linux.sh
