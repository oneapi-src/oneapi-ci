# SPDX-FileCopyrightText: 2022 Intel Corporation
#
# SPDX-License-Identifier: MIT

stages:
  - build

variables:
  WINDOWS_BASEKIT_URL: https:/registrationcenter-download.intel.com/akdlm/IRC_NAS/c961e083-5685-4f0b-ada5-c6cf16f561dd/w_BaseKit_p_2023.1.0.47256_offline.exe
  WINDOWS_HPCKIT_URL: https:/registrationcenter-download.intel.com/akdlm/IRC_NAS/2a13d966-fcc5-4a66-9fcc-50603820e0c9/w_HPCKit_p_2023.1.0.46357_offline.exe
  LINUX_BASEKIT_URL: https:/registrationcenter-download.intel.com/akdlm/IRC_NAS/7deeaac4-f605-4bcf-a81b-ea7531577c61/l_BaseKit_p_2023.1.0.46401_offline.sh
  LINUX_HPCKIT_URL: https:/registrationcenter-download.intel.com/akdlm/IRC_NAS/1ff1b38a-8218-4c53-9956-f0b264de35a4/l_HPCKit_p_2023.1.0.46346_offline.sh
  WINDOWS_CPP_COMPONENTS: intel.oneapi.win.cpp-compiler
  WINDOWS_FORTRAN_COMPONENTS: intel.oneapi.win.ifort-compiler
  WINDOWS_DPCPP_COMPONENTS: intel.oneapi.win.dpcpp-compiler
  LINUX_CPP_COMPONENTS: intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic
  LINUX_FORTRAN_COMPONENTS: intel-oneapi-compiler-fortran
  LINUX_DPCPP_COMPONENTS: intel-oneapi-compiler-dpcpp-cpp
  LINUX_CPP_COMPONENTS_WEB: intel.oneapi.lin.dpcpp-cpp-compiler-pro
  LINUX_FORTRAN_COMPONENTS_WEB: intel.oneapi.lin.ifort-compiler
  LINUX_DPCPP_COMPONENTS_WEB: intel.oneapi.lin.dpcpp-cpp-compiler
  CACHE_NUMBER: 13
  SAMPLES_TAG: 2023.1.0
  COMPILER_VERSION: "2023.1.0"
  TBB_VERSION: "2021.9.0"
  VS_VER: 2019_build_tools

.shared_windows_runners:
  tags:
  - shared-windows
  - windows
  - windows-1809

build_windows_cpp:
  extends:
  - .shared_windows_runners
  stage: build
  cache:
    key:
      prefix: install-${WINDOWS_CPP_COMPONENTS}-compiler-vcvarsall
      files:
        - scripts/cache_exclude_windows.ps1
    paths:
      - cache # GitLab CI cannot cache files outside build directory
  before_script: # Restoring install directory from 'cache' folder
    - |
        if(Test-Path cache) {
          New-Item -ItemType "directory" -Path "C:\Program Files (x86)\Intel\oneAPI" -Force
          Move-Item -Path cache\compiler -Destination "C:\Program Files (x86)\Intel\oneAPI"
          Move-Item -Path cache\setvars-vcvarsall.bat -Destination "C:\Program Files (x86)\Intel\oneAPI\setvars-vcvarsall.bat"
        } else {
          scripts/install_windows.bat $WINDOWS_HPCKIT_URL $WINDOWS_CPP_COMPONENTS
        }
  script:
    - scripts/build_windows.bat c++ ${VS_VER} ${SAMPLES_TAG}
  after_script:  # Moving install directory into 'cache' folder inside build directory
    - |
        if(!(Test-Path cache)) {
          scripts/cache_exclude_windows.ps1
          New-Item -ItemType "directory" -Path "cache"
        }
        # "push-pull" is the default cache policy, so cache folder needs to be setup in every run.
        # consider setting "policy: pull" once the cache is warm.
        Move-Item -Path "C:\Program Files (x86)\Intel\oneAPI\compiler" -Destination "cache"
        Move-Item -Path "C:\Program Files (x86)\Intel\oneAPI\setvars-vcvarsall.bat" -Destination "cache"

  # Delete the following if you don't want to save install logs
  artifacts:
    when: always
    paths:
      - extract.log
      - bootstrapper*
      - installer*
    expire_in: 1 week

build_windows_fortran:
  extends:
  - .shared_windows_runners
  stage: build
  cache:
    key:
      prefix: install-${WINDOWS_FORTRAN_COMPONENTS}-compiler-vcvarsall
      files:
        - scripts/cache_exclude_windows.ps1
    paths:
      - cache
  before_script:
    - |
        if(Test-Path cache) {
          New-Item -ItemType "directory" -Path "C:\Program Files (x86)\Intel\oneAPI" -Force
          Move-Item -Path cache\compiler -Destination "C:\Program Files (x86)\Intel\oneAPI"
          Move-Item -Path cache\setvars-vcvarsall.bat -Destination "C:\Program Files (x86)\Intel\oneAPI\setvars-vcvarsall.bat"
        } else {
          scripts/install_windows.bat $WINDOWS_HPCKIT_URL $WINDOWS_FORTRAN_COMPONENTS
        }
  script:
    - scripts/build_windows.bat fortran ${VS_VER} ${SAMPLES_TAG}
  after_script:
    - |
        if(!(Test-Path cache)) {
          scripts/cache_exclude_windows.ps1
          New-Item -ItemType "directory" -Path "cache"
        }
        Move-Item -Path "C:\Program Files (x86)\Intel\oneAPI\compiler" -Destination "cache"
        Move-Item -Path "C:\Program Files (x86)\Intel\oneAPI\setvars-vcvarsall.bat" -Destination "cache"

  # Delete the following if you don't want to save install logs
  artifacts:
    when: always
    paths:
      - extract.log
      - bootstrapper*
      - installer*
    expire_in: 1 week

build_windows_dpcpp:
  extends:
  - .shared_windows_runners
  stage: build
  cache:
    key:
      prefix: install-${WINDOWS_DPCPP_COMPONENTS}-compiler-tbb-opencl-vcvarsall
      files:
        - scripts/cache_exclude_windows.ps1
    paths:
      - cache
  before_script:
    - |
        if(Test-Path cache) {
          New-Item -ItemType "directory" -Path "C:\Program Files (x86)\Intel\oneAPI" -Force
          Move-Item -Path cache\compiler -Destination "C:\Program Files (x86)\Intel\oneAPI"
          Move-Item -Path cache\tbb -Destination "C:\Program Files (x86)\Intel\oneAPI"
          Move-Item -Path cache\OpenCL.dll -Destination "C:\Windows\System32"
          Move-Item -Path cache\setvars-vcvarsall.bat -Destination "C:\Program Files (x86)\Intel\oneAPI\setvars-vcvarsall.bat"
          scripts/restore_registry.bat $COMPILER_VERSION $TBB_VERSION
        } else {
          scripts/install_windows.bat $WINDOWS_BASEKIT_URL $WINDOWS_DPCPP_COMPONENTS
        }
  script:
    - scripts/build_windows.bat dpc++ ${VS_VER} ${SAMPLES_TAG}
  after_script:
    - |
        if(!(Test-Path cache)) {
          scripts/cache_exclude_windows.ps1
          New-Item -ItemType "directory" -Path "cache"
        }
        Move-Item -Path "C:\Program Files (x86)\Intel\oneAPI\compiler" -Destination "cache"
        Move-Item -Path "C:\Program Files (x86)\Intel\oneAPI\tbb" -Destination "cache"
        Move-Item -Path "C:\Windows\System32\OpenCL.dll" -Destination "cache"
        Move-Item -Path "C:\Program Files (x86)\Intel\oneAPI\setvars-vcvarsall.bat" -Destination "cache"

  # Delete the following if you don't want to save install logs
  artifacts:
    when: always
    paths:
      - extract.log
      - bootstrapper*
      - installer*
    expire_in: 1 week

build_linux_cpp:
  image: ubuntu:20.04
  stage: build
  cache:
    key: # GitLab CI doesn't support steps before cache is restored, i.e. only static cache keys are supported.
      prefix: install-${LINUX_HPCKIT_URL}-${LINUX_CPP_COMPONENTS_WEB}-compiler
      files:
        - scripts/cache_exclude_linux_no_sudo.sh
    paths:
      - cache
  before_script:
    - . scripts/install_prerequisites_linux_no_sudo.sh
    - |
        if [[ -d cache ]]
        then
          mkdir -p /opt/intel/oneapi
          mv cache/compiler /opt/intel/oneapi/
        else
          . scripts/install_linux_no_sudo.sh $LINUX_HPCKIT_URL $LINUX_CPP_COMPONENTS_WEB
        fi
  script:
    - scripts/build_linux.sh c++ ${SAMPLES_TAG}
  after_script:
    - |
        if [[ ! -d cache ]]
        then
          . scripts/cache_exclude_linux_no_sudo.sh
          mkdir cache
        fi
        mv /opt/intel/oneapi/compiler cache
  # Delete the following if you don't want to save install logs
  artifacts:
    when: always
    paths:
      - extract.log
      - bootstrapper*
      - installer*
    expire_in: 1 week

build_linux_fortran:
  image: ubuntu:20.04
  stage: build
  cache:
    key: # GitLab CI doesn't support steps before cache is restored, i.e. only static cache keys are supported.
      prefix: install-${LINUX_HPCKIT_URL}-${LINUX_FORTRAN_COMPONENTS_WEB}-compiler
      files:
        - scripts/cache_exclude_linux_no_sudo.sh
    paths:
      - cache
  before_script:
    - . scripts/install_prerequisites_linux_no_sudo.sh
    - |
        if [[ -d cache ]]
        then
          mkdir -p /opt/intel/oneapi
          mv cache/compiler /opt/intel/oneapi/
        else
          . scripts/install_linux_no_sudo.sh $LINUX_HPCKIT_URL $LINUX_FORTRAN_COMPONENTS_WEB
        fi
  script:
    - scripts/build_linux.sh fortran ${SAMPLES_TAG}
  after_script:
    - |
        if [[ ! -d cache ]]
        then
          . scripts/cache_exclude_linux_no_sudo.sh
          mkdir cache
        fi
        mv /opt/intel/oneapi/compiler cache
  # Delete the following if you don't want to save install logs
  artifacts:
    when: always
    paths:
      - extract.log
      - bootstrapper*
      - installer*
    expire_in: 1 week

build_linux_dpcpp:
  image: ubuntu:20.04
  stage: build
  cache:
    key: # GitLab CI doesn't support steps before cache is restored, i.e. only static cache keys are supported.
      prefix: install-${LINUX_BASEKIT_URL}-${LINUX_DPCPP_COMPONENTS_WEB}-compiler-tbb
      files:
        - scripts/cache_exclude_linux_no_sudo.sh
    paths:
      - cache
  before_script:
    - . scripts/install_prerequisites_linux_no_sudo.sh
    - |
        if [[ -d cache ]]
        then
          mkdir -p /opt/intel/oneapi
          mv cache/compiler /opt/intel/oneapi/
          mv cache/tbb /opt/intel/oneapi/
        else
          . scripts/install_linux_no_sudo.sh $LINUX_BASEKIT_URL $LINUX_DPCPP_COMPONENTS_WEB
        fi
  script:
    - scripts/build_linux.sh dpc++ ${SAMPLES_TAG}
  after_script:
    - |
        if [[ ! -d cache ]]
        then
          . scripts/cache_exclude_linux_no_sudo.sh
          mkdir cache
        fi
        mv /opt/intel/oneapi/compiler cache
        mv /opt/intel/oneapi/tbb cache
  # Delete the following if you don't want to save install logs
  artifacts:
    when: always
    paths:
      - extract.log
      - bootstrapper*
      - installer*
    expire_in: 1 week

build_linux_apt_cpp:
  image: ubuntu:20.04
  stage: build
  cache:
    key: # GitLab CI doesn't support steps before cache is restored, i.e. only static cache keys are supported.
      prefix: install-${CACHE_NUMBER}-${LINUX_CPP_COMPONENTS}-compiler
      files:
        - scripts/cache_exclude_linux_no_sudo.sh
    paths:
      - cache
  before_script:
    - . scripts/install_prerequisites_linux_apt_no_sudo.sh
    - |
        if [[ -d cache ]]
        then
          mkdir -p /opt/intel/oneapi
          mv cache/compiler /opt/intel/oneapi/
        else
          . scripts/setup_apt_repo_linux_no_sudo.sh
          . scripts/install_linux_apt_no_sudo.sh $LINUX_CPP_COMPONENTS
        fi
  script:
    - scripts/build_linux.sh c++ ${SAMPLES_TAG}
  after_script:
    - |
        if [[ ! -d cache ]]
        then
          . scripts/cache_exclude_linux_no_sudo.sh
          mkdir cache
        fi
        mv /opt/intel/oneapi/compiler cache

build_linux_apt_fortran:
  image: ubuntu:20.04
  stage: build
  cache:
    key:
      prefix: install-${CACHE_NUMBER}-${LINUX_FORTRAN_COMPONENTS}-compiler
      files:
        - scripts/cache_exclude_linux_no_sudo.sh
    paths:
      - cache
  before_script:
    - . scripts/install_prerequisites_linux_apt_no_sudo.sh
    - |
        if [[ -d cache ]]
        then
          mkdir -p /opt/intel/oneapi
          mv cache/compiler /opt/intel/oneapi/
        else
          . scripts/setup_apt_repo_linux_no_sudo.sh
          . scripts/install_linux_apt_no_sudo.sh $LINUX_FORTRAN_COMPONENTS
        fi
  script:
    - scripts/build_linux.sh fortran ${SAMPLES_TAG}
  after_script:
    - |
        if [[ ! -d cache ]]
        then
          . scripts/cache_exclude_linux_no_sudo.sh
          mkdir cache
        fi
        mv /opt/intel/oneapi/compiler cache

build_linux_apt_dpcpp:
  image: ubuntu:20.04
  stage: build
  cache:
    key:
      prefix: install-${CACHE_NUMBER}-${LINUX_DPCPP_COMPONENTS}-compiler-tbb
      files:
        - scripts/cache_exclude_linux_no_sudo.sh
    paths:
      - cache
  before_script:
    - . scripts/install_prerequisites_linux_apt_no_sudo.sh
    - |
        if [[ -d cache ]]
        then
          mkdir -p /opt/intel/oneapi
          mv cache/compiler /opt/intel/oneapi/
          mv cache/tbb /opt/intel/oneapi/
        else
          . scripts/setup_apt_repo_linux_no_sudo.sh
          . scripts/install_linux_apt_no_sudo.sh $LINUX_DPCPP_COMPONENTS
        fi
  script:
    - scripts/build_linux.sh dpc++ ${SAMPLES_TAG}
  after_script:
    - |
        if [[ ! -d cache ]]
        then
          . scripts/cache_exclude_linux_no_sudo.sh
          mkdir cache
        fi
        mv /opt/intel/oneapi/compiler cache
        mv /opt/intel/oneapi/tbb cache

build_linux_dnf_cpp:
  image: fedora:latest
  stage: build
  cache:
    key: # GitLab CI doesn't support steps before cache is restored, i.e. only static cache keys are supported.
      prefix: install-${CACHE_NUMBER}-${LINUX_CPP_COMPONENTS}-compiler
      files:
        - scripts/cache_exclude_linux_no_sudo.sh
    paths:
      - cache
  before_script:
    - . scripts/install_prerequisites_linux_dnf_no_sudo.sh
    - |
        if [[ -d cache ]]
        then
          mkdir -p /opt/intel/oneapi
          mv cache/compiler /opt/intel/oneapi/
        else
          . scripts/setup_yum_dnf_repo_linux_no_sudo.sh
          . scripts/install_linux_dnf_no_sudo.sh $LINUX_CPP_COMPONENTS
        fi
  script:
    - scripts/build_linux.sh c++ ${SAMPLES_TAG}
  after_script:
    - |
        if [[ ! -d cache ]]
        then
          . scripts/cache_exclude_linux_no_sudo.sh
          mkdir cache
        fi
        mv /opt/intel/oneapi/compiler cache

build_linux_dnf_fortran:
  image: fedora:latest
  stage: build
  cache:
    key:
      prefix: install-${CACHE_NUMBER}-${LINUX_FORTRAN_COMPONENTS}-compiler
      files:
        - scripts/cache_exclude_linux_no_sudo.sh
    paths:
      - cache
  before_script:
    - . scripts/install_prerequisites_linux_dnf_no_sudo.sh
    - |
        if [[ -d cache ]]
        then
          mkdir -p /opt/intel/oneapi
          mv cache/compiler /opt/intel/oneapi/
        else
          . scripts/setup_yum_dnf_repo_linux_no_sudo.sh
          . scripts/install_linux_dnf_no_sudo.sh $LINUX_FORTRAN_COMPONENTS
        fi
  script:
    - scripts/build_linux.sh fortran ${SAMPLES_TAG}
  after_script:
    - |
        if [[ ! -d cache ]]
        then
          . scripts/cache_exclude_linux_no_sudo.sh
          mkdir cache
        fi
        mv /opt/intel/oneapi/compiler cache

build_linux_dnf_dpcpp:
  image: fedora:latest
  stage: build
  cache:
    key:
      prefix: install-${CACHE_NUMBER}-${LINUX_DPCPP_COMPONENTS}-compiler-tbb
      files:
        - scripts/cache_exclude_linux_no_sudo.sh
    paths:
      - cache
  before_script:
    - . scripts/install_prerequisites_linux_dnf_no_sudo.sh
    - |
        if [[ -d cache ]]
        then
          mkdir -p /opt/intel/oneapi
          mv cache/compiler /opt/intel/oneapi/
          mv cache/tbb /opt/intel/oneapi/
        else
          . scripts/setup_yum_dnf_repo_linux_no_sudo.sh
          . scripts/install_linux_dnf_no_sudo.sh $LINUX_DPCPP_COMPONENTS
        fi
  script:
    - scripts/build_linux.sh dpc++ ${SAMPLES_TAG}
  after_script:
    - |
        if [[ ! -d cache ]]
        then
          . scripts/cache_exclude_linux_no_sudo.sh
          mkdir cache
        fi
        mv /opt/intel/oneapi/compiler cache
        mv /opt/intel/oneapi/tbb cache
