# SPDX-FileCopyrightText: 2022 Intel Corporation
#
# SPDX-License-Identifier: MIT

stages:
  - build

variables:
  LINUX_BASEKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/18673/l_BaseKit_p_2022.2.0.262_offline.sh
  LINUX_HPCKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/18679/l_HPCKit_p_2022.2.0.191_offline.sh
  LINUX_CPP_COMPONENTS: intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic
  LINUX_FORTRAN_COMPONENTS: intel-oneapi-compiler-fortran
  LINUX_DPCPP_COMPONENTS: intel-oneapi-compiler-dpcpp-cpp
  LINUX_CPP_COMPONENTS_WEB: intel.oneapi.lin.dpcpp-cpp-compiler-pro
  LINUX_FORTRAN_COMPONENTS_WEB: intel.oneapi.lin.ifort-compiler
  LINUX_DPCPP_COMPONENTS_WEB: intel.oneapi.lin.dpcpp-cpp-compiler
  CACHE_NUMBER: 7
  SAMPLES_TAG: 2022.2.0
  COMPILER_VERSION: 2022.1.0
  VS_VER: vs2019

build_linux_cpp:
  image: ubuntu:20.04
  stage: build
  cache:
    key: # GitLab CI doesn't support steps before cache is restored, i.e. only static cache keys are supported.
      prefix: install-${LINUX_HPCKIT_URL}-${LINUX_CPP_COMPONENTS_WEB}-compiler
      files:
        - scripts/cache_exclude_linux_no_sudo.sh
    paths:
      - cache
  before_script:
    - . scripts/install_prerequisites_linux_no_sudo.sh
    - |
        if [[ -d cache ]]
        then
          mkdir -p /opt/intel/oneapi
          mv cache/compiler /opt/intel/oneapi/
        else
          . scripts/install_linux_no_sudo.sh $LINUX_HPCKIT_URL $LINUX_CPP_COMPONENTS_WEB
        fi
  script:
    - scripts/build_linux.sh c++ ${SAMPLES_TAG}
  after_script:
    - |
        if [[ ! -d cache ]]
        then
          . scripts/cache_exclude_linux_no_sudo.sh
          mkdir cache
        fi
        mv /opt/intel/oneapi/compiler cache
  # Delete the following if you don't want to save install logs
  artifacts:
    when: always
    paths:
      - extract.log
      - bootstrapper*
      - installer*
    expire_in: 1 week

build_linux_fortran:
  image: ubuntu:20.04
  stage: build
  cache:
    key: # GitLab CI doesn't support steps before cache is restored, i.e. only static cache keys are supported.
      prefix: install-${LINUX_HPCKIT_URL}-${LINUX_FORTRAN_COMPONENTS_WEB}-compiler
      files:
        - scripts/cache_exclude_linux_no_sudo.sh
    paths:
      - cache
  before_script:
    - . scripts/install_prerequisites_linux_no_sudo.sh
    - |
        if [[ -d cache ]]
        then
          mkdir -p /opt/intel/oneapi
          mv cache/compiler /opt/intel/oneapi/
        else
          . scripts/install_linux_no_sudo.sh $LINUX_HPCKIT_URL $LINUX_FORTRAN_COMPONENTS_WEB
        fi
  script:
    - scripts/build_linux.sh fortran ${SAMPLES_TAG}
  after_script:
    - |
        if [[ ! -d cache ]]
        then
          . scripts/cache_exclude_linux_no_sudo.sh
          mkdir cache
        fi
        mv /opt/intel/oneapi/compiler cache
  # Delete the following if you don't want to save install logs
  artifacts:
    when: always
    paths:
      - extract.log
      - bootstrapper*
      - installer*
    expire_in: 1 week

build_linux_dpcpp:
  image: ubuntu:20.04
  stage: build
  cache:
    key: # GitLab CI doesn't support steps before cache is restored, i.e. only static cache keys are supported.
      prefix: install-${LINUX_BASEKIT_URL}-${LINUX_DPCPP_COMPONENTS_WEB}-compiler-tbb
      files:
        - scripts/cache_exclude_linux_no_sudo.sh
    paths:
      - cache
  before_script:
    - . scripts/install_prerequisites_linux_no_sudo.sh
    - |
        if [[ -d cache ]]
        then
          mkdir -p /opt/intel/oneapi
          mv cache/compiler /opt/intel/oneapi/
          mv cache/tbb /opt/intel/oneapi/
        else
          . scripts/install_linux_no_sudo.sh $LINUX_BASEKIT_URL $LINUX_DPCPP_COMPONENTS_WEB
        fi
  script:
    - scripts/build_linux.sh dpc++ ${SAMPLES_TAG}
  after_script:
    - |
        if [[ ! -d cache ]]
        then
          . scripts/cache_exclude_linux_no_sudo.sh
          mkdir cache
        fi
        mv /opt/intel/oneapi/compiler cache
        mv /opt/intel/oneapi/tbb cache
  # Delete the following if you don't want to save install logs
  artifacts:
    when: always
    paths:
      - extract.log
      - bootstrapper*
      - installer*
    expire_in: 1 week

build_linux_apt_cpp:
  image: ubuntu:20.04
  stage: build
  cache:
    key: # GitLab CI doesn't support steps before cache is restored, i.e. only static cache keys are supported.
      prefix: install-${CACHE_NUMBER}-${LINUX_CPP_COMPONENTS}-compiler
      files:
        - scripts/cache_exclude_linux_no_sudo.sh
    paths:
      - cache
  before_script:
    - . scripts/install_prerequisites_linux_apt_no_sudo.sh
    - |
        if [[ -d cache ]]
        then
          mkdir -p /opt/intel/oneapi
          mv cache/compiler /opt/intel/oneapi/
        else
          . scripts/setup_apt_repo_linux_no_sudo.sh
          . scripts/install_linux_apt_no_sudo.sh $LINUX_CPP_COMPONENTS
        fi
  script:
    - scripts/build_linux.sh c++ ${SAMPLES_TAG}
  after_script:
    - |
        if [[ ! -d cache ]]
        then
          . scripts/cache_exclude_linux_no_sudo.sh
          mkdir cache
        fi
        mv /opt/intel/oneapi/compiler cache

build_linux_apt_fortran:
  image: ubuntu:20.04
  stage: build
  cache:
    key:
      prefix: install-${CACHE_NUMBER}-${LINUX_FORTRAN_COMPONENTS}-compiler
      files:
        - scripts/cache_exclude_linux_no_sudo.sh
    paths:
      - cache
  before_script:
    - . scripts/install_prerequisites_linux_apt_no_sudo.sh
    - |
        if [[ -d cache ]]
        then
          mkdir -p /opt/intel/oneapi
          mv cache/compiler /opt/intel/oneapi/
        else
          . scripts/setup_apt_repo_linux_no_sudo.sh
          . scripts/install_linux_apt_no_sudo.sh $LINUX_FORTRAN_COMPONENTS
        fi
  script:
    - scripts/build_linux.sh fortran ${SAMPLES_TAG}
  after_script:
    - |
        if [[ ! -d cache ]]
        then
          . scripts/cache_exclude_linux_no_sudo.sh
          mkdir cache
        fi
        mv /opt/intel/oneapi/compiler cache

build_linux_apt_dpcpp:
  image: ubuntu:20.04
  stage: build
  cache:
    key:
      prefix: install-${CACHE_NUMBER}-${LINUX_DPCPP_COMPONENTS}-compiler-tbb
      files:
        - scripts/cache_exclude_linux_no_sudo.sh
    paths:
      - cache
  before_script:
    - . scripts/install_prerequisites_linux_apt_no_sudo.sh
    - |
        if [[ -d cache ]]
        then
          mkdir -p /opt/intel/oneapi
          mv cache/compiler /opt/intel/oneapi/
          mv cache/tbb /opt/intel/oneapi/
        else
          . scripts/setup_apt_repo_linux_no_sudo.sh
          . scripts/install_linux_apt_no_sudo.sh $LINUX_DPCPP_COMPONENTS
        fi
  script:
    - scripts/build_linux.sh dpc++ ${SAMPLES_TAG}
  after_script:
    - |
        if [[ ! -d cache ]]
        then
          . scripts/cache_exclude_linux_no_sudo.sh
          mkdir cache
        fi
        mv /opt/intel/oneapi/compiler cache
        mv /opt/intel/oneapi/tbb cache

build_linux_dnf_cpp:
  image: fedora:latest
  stage: build
  cache:
    key: # GitLab CI doesn't support steps before cache is restored, i.e. only static cache keys are supported.
      prefix: install-${CACHE_NUMBER}-${LINUX_CPP_COMPONENTS}-compiler
      files:
        - scripts/cache_exclude_linux_no_sudo.sh
    paths:
      - cache
  before_script:
    - . scripts/install_prerequisites_linux_dnf_no_sudo.sh
    - |
        if [[ -d cache ]]
        then
          mkdir -p /opt/intel/oneapi
          mv cache/compiler /opt/intel/oneapi/
        else
          . scripts/setup_yum_dnf_repo_linux_no_sudo.sh
          . scripts/install_linux_dnf_no_sudo.sh $LINUX_CPP_COMPONENTS
        fi
  script:
    - scripts/build_linux.sh c++ ${SAMPLES_TAG}
  after_script:
    - |
        if [[ ! -d cache ]]
        then
          . scripts/cache_exclude_linux_no_sudo.sh
          mkdir cache
        fi
        mv /opt/intel/oneapi/compiler cache

build_linux_dnf_fortran:
  image: fedora:latest
  stage: build
  cache:
    key:
      prefix: install-${CACHE_NUMBER}-${LINUX_FORTRAN_COMPONENTS}-compiler
      files:
        - scripts/cache_exclude_linux_no_sudo.sh
    paths:
      - cache
  before_script:
    - . scripts/install_prerequisites_linux_dnf_no_sudo.sh
    - |
        if [[ -d cache ]]
        then
          mkdir -p /opt/intel/oneapi
          mv cache/compiler /opt/intel/oneapi/
        else
          . scripts/setup_yum_dnf_repo_linux_no_sudo.sh
          . scripts/install_linux_dnf_no_sudo.sh $LINUX_FORTRAN_COMPONENTS
        fi
  script:
    - scripts/build_linux.sh fortran ${SAMPLES_TAG}
  after_script:
    - |
        if [[ ! -d cache ]]
        then
          . scripts/cache_exclude_linux_no_sudo.sh
          mkdir cache
        fi
        mv /opt/intel/oneapi/compiler cache

build_linux_dnf_dpcpp:
  image: fedora:latest
  stage: build
  cache:
    key:
      prefix: install-${CACHE_NUMBER}-${LINUX_DPCPP_COMPONENTS}-compiler-tbb
      files:
        - scripts/cache_exclude_linux_no_sudo.sh
    paths:
      - cache
  before_script:
    - . scripts/install_prerequisites_linux_dnf_no_sudo.sh
    - |
        if [[ -d cache ]]
        then
          mkdir -p /opt/intel/oneapi
          mv cache/compiler /opt/intel/oneapi/
          mv cache/tbb /opt/intel/oneapi/
        else
          . scripts/setup_yum_dnf_repo_linux_no_sudo.sh
          . scripts/install_linux_dnf_no_sudo.sh $LINUX_DPCPP_COMPONENTS
        fi
  script:
    - scripts/build_linux.sh dpc++ ${SAMPLES_TAG}
  after_script:
    - |
        if [[ ! -d cache ]]
        then
          . scripts/cache_exclude_linux_no_sudo.sh
          mkdir cache
        fi
        mv /opt/intel/oneapi/compiler cache
        mv /opt/intel/oneapi/tbb cache
